---
title: "lab3_named_lab6 â€“ Shrinkage Methods"
output:
html_document: default
pdf_document: default
---
```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)
```
## Part 1: Explore glmnet
1. Install package and import library "glmnet" for shrinkage method functions.
```{r echo=TRUE}
install.packages("glmnet", repos = "http://cran.us.r-project.org")
library("glmnet")
```
2. We will use the Credit dataset. Load it from folder N, view it...
```{r echo=TRUE}
install.packages("ISLR", repos = "http://cran.us.r-project.org")
library(ISLR)
dat<-Credit
View(dat)
summary(dat)
```
...and check for NA's and irrelevant variables:
```{r echo=TRUE}
length(which(is.na(dat)))
```
--> There are no missing values (0 length vector of missing values)
3. Prepare data: glmnet accepts data in matrix form, with quantitative variables only, and no missing values. Use model.matrix() to prepare the data for modelling. We will be predicting Income using all available predictors, therefore our formula will be Income~. . *hint: notice model.matrix() creates an intercept column. Get rid of this column before modelling.
find non-quantitative variables:
```{r echo=TRUE}
colnames(dat[,sapply(dat,class)=="factor"])
```
create dat2 with no non-quantitative variables (and without ID which is irrelevant):
```{r echo=TRUE}
keepList<-c(lapply(dat,class)!="factor")
keepList["ID"]=FALSE
dat2 <- dat[,keepList]
colnames(dat2)
```
Use model.matrix() to prepare the data for modelling, remove intercept:
```{r echo=TRUE}
matrix=model.matrix(Income ~ Limit+Rating+Cards+Age+Education+Balance, dat2)
colnames(matrix)
matrix2<-matrix[,2:7]
colnames(matrix2)
```
4. Run lasso, ridge, and elastic net models. Define each model by a name that specifies the model type.
*Run two elastic net models for two different alphas. Choose an alpha close to zero, and a second alpha closer to 1.
### Lasso
```{r echo=TRUE}
lasso=glmnet(matrix2,dat2$Income,alpha=1)
```
### Ridge
```{r echo=TRUE}
ridge=glmnet(matrix2,dat2$Income,alpha=0)
```
### Elastic: close to ridge alpha
```{r echo=TRUE}
elastic_ridge=glmnet(matrix2,dat2$Income,alpha=0.01)
```
### Elastic: close to lasso alpha
```{r echo=TRUE}
elastic_lasso=glmnet(matrix2,dat2$Income,alpha=0.9)
```
5. Use coef(model) to view the coefficients across the lambdas for the different models. What happens to the coefficients as lambda gets smaller? How does this differ for the different methods?
```{r echo=TRUE}
plot(coef(lasso))
plot(coef(ridge))
plot(coef(elastic_ridge))
plot(coef(elastic_lasso))
```
As lambda gets smaller -
"ridge < elastic_ridge < elastic_lasso<lasso"
most of the time the coefficients get bigger -
"coef(ridge) > coef(elastic_ridge) > coef(elastic_lasso) > coef(lasso)"
You can see an ilustration here:
```{r echo=TRUE}
coef(lasso)[1:100]>coef(elastic_lasso)[1:100]
```
coef(lasso)
coef(lasso).lambda
coef_laso=coef(lasso)
coef_laso
View(coef_laso)
glmnet(matrix2,dat2$Income,alpha=1,lambda = 1)
coef(glmnet(matrix2,dat2$Income,alpha=1,lambda = 1))
coef(glmnet(matrix2,dat2$Income,alpha=1,lambda = 100))
coef(glmnet(matrix2,dat2$Income,alpha=1,lambda = 50))
coef(glmnet(matrix2,dat2$Income,alpha=1,lambda = 10))
coef(glmnet(matrix2,dat2$Income,alpha=1,lambda = 1-10))
coef(glmnet(matrix2,dat2$Income,alpha=1,lambda = 10))
knitr::opts_chunk$set(echo = TRUE)
install.packages("glmnet", repos = "http://cran.us.r-project.org")
library("glmnet")
install.packages("ISLR", repos = "http://cran.us.r-project.org")
library(ISLR)
dat<-Credit
View(dat)
summary(dat)
length(which(is.na(dat)))
colnames(dat[,sapply(dat,class)=="factor"])
keepList<-c(lapply(dat,class)!="factor")
keepList["ID"]=FALSE
dat2 <- dat[,keepList]
colnames(dat2)
matrix=model.matrix(Income ~ Limit+Rating+Cards+Age+Education+Balance, dat2)
colnames(matrix)
matrix2<-matrix[,2:7]
colnames(matrix2)
lasso=glmnet(matrix2,dat2$Income,alpha=1)
ridge=glmnet(matrix2,dat2$Income,alpha=0)
elastic_ridge=glmnet(matrix2,dat2$Income,alpha=0.01)
elastic_lasso=glmnet(matrix2,dat2$Income,alpha=0.9)
install.packages("glmnet", repos = "http://cran.us.r-project.org")
plot(coef(lasso))
knitr::opts_chunk$set(echo = TRUE)
install.packages("glmnet", repos = "http://cran.us.r-project.org")
library("glmnet")
install.packages("ISLR", repos = "http://cran.us.r-project.org")
knitr::opts_chunk$set(echo = TRUE)
install.packages("glmnet", repos = "http://cran.us.r-project.org")
library("glmnet")
install.packages("ISLR", repos = "http://cran.us.r-project.org")
library(ISLR)
dat<-Credit
View(dat)
summary(dat)
length(which(is.na(dat)))
colnames(dat[,sapply(dat,class)=="factor"])
keepList<-c(lapply(dat,class)!="factor")
keepList["ID"]=FALSE
dat2 <- dat[,keepList]
colnames(dat2)
matrix=model.matrix(Income ~ Limit+Rating+Cards+Age+Education+Balance, dat2)
colnames(matrix)
matrix2<-matrix[,2:7]
colnames(matrix2)
lasso=glmnet(matrix2,dat2$Income,alpha=1)
ridge=glmnet(matrix2,dat2$Income,alpha=0)
elastic_ridge=glmnet(matrix2,dat2$Income,alpha=0.01)
elastic_lasso=glmnet(matrix2,dat2$Income,alpha=0.9)
plot(coef(lasso))
plot(coef(ridge))
plot(coef(elastic_ridge))
plot(coef(elastic_lasso))
coef(lasso)
elastic_lasso=glmnet(matrix2,dat2$Income,alpha=0.9)
plot(glmnet(matrix2,dat2$Income,alpha=0.9))
plot(elastic_lasso)
plot(elastic_lasso)
coef(lasso)
plot(glmnet(matrix2,dat2$Income,alpha=1))
coef(ridge)
plot(glmnet(matrix2,dat2$Income,alpha=0))
coef(elastic_ridge)
plot(glmnet(matrix2,dat2$Income,alpha=0.01))
coef(elastic_lasso)
plot(glmnet(matrix2,dat2$Income,alpha=0.9))
knitr::opts_chunk$set(echo = TRUE)
install.packages("glmnet", repos = "http://cran.us.r-project.org")
library("glmnet")
install.packages("ISLR", repos = "http://cran.us.r-project.org")
library(ISLR)
dat<-Credit
View(dat)
summary(dat)
length(which(is.na(dat)))
colnames(dat[,sapply(dat,class)=="factor"])
keepList<-c(lapply(dat,class)!="factor")
keepList["ID"]=FALSE
dat2 <- dat[,keepList]
colnames(dat2)
matrix=model.matrix(Income ~ Limit+Rating+Cards+Age+Education+Balance, dat2)
colnames(matrix)
matrix2<-matrix[,2:7]
colnames(matrix2)
lasso=glmnet(matrix2,dat2$Income,alpha=1)
ridge=glmnet(matrix2,dat2$Income,alpha=0)
elastic_ridge=glmnet(matrix2,dat2$Income,alpha=0.01)
elastic_lasso=glmnet(matrix2,dat2$Income,alpha=0.9)
coef(lasso)
plot(glmnet(matrix2,dat2$Income,alpha=1))
coef(ridge)
plot(glmnet(matrix2,dat2$Income,alpha=0))
coef(elastic_ridge)
plot(glmnet(matrix2,dat2$Income,alpha=0.01))
coef(elastic_lasso)
plot(glmnet(matrix2,dat2$Income,alpha=0.9))
knitr::opts_chunk$set(echo = TRUE)
install.packages("glmnet", repos = "http://cran.us.r-project.org")
library("glmnet")
install.packages("ISLR", repos = "http://cran.us.r-project.org")
library(ISLR)
dat<-Credit
View(dat)
summary(dat)
length(which(is.na(dat)))
colnames(dat[,sapply(dat,class)=="factor"])
keepList<-c(lapply(dat,class)!="factor")
keepList["ID"]=FALSE
dat2 <- dat[,keepList]
colnames(dat2)
matrix=model.matrix(Income ~ Limit+Rating+Cards+Age+Education+Balance, dat2)
colnames(matrix)
matrix2<-matrix[,2:7]
colnames(matrix2)
lasso=glmnet(matrix2,dat2$Income,alpha=1)
ridge=glmnet(matrix2,dat2$Income,alpha=0)
elastic_ridge=glmnet(matrix2,dat2$Income,alpha=0.01)
elastic_lasso=glmnet(matrix2,dat2$Income,alpha=0.9)
coef(lasso)
plot(glmnet(matrix2,dat2$Income,alpha=1))
coef(ridge)
plot(glmnet(matrix2,dat2$Income,alpha=0))
coef(elastic_ridge)
plot(glmnet(matrix2,dat2$Income,alpha=0.01))
coef(elastic_lasso)
plot(glmnet(matrix2,dat2$Income,alpha=0.9))
install.packages("yaml")
install.packages("cran")
install.packages("CRAN")
rupdate
R.Version()
library(pls)
?pls
??pls
